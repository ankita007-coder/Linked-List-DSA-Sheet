# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def rotateRight(self, head, k):
        """
        :type head: ListNode
        :type k: int
        :rtype: ListNode
        """
        if not head or not head.next or k==0:
            return head
        curr = temp=head
        l=1
        while curr and curr.next:
            l+=1
            curr=curr.next
        
        k = k%l
        if k==0:
            return head
        k = l-k-1
        while k>0:
            k-=1
            temp = temp.next
        newhead = temp.next
        temp.next = None
        curr.next = head
        return newhead
        
